/**
 * generated by Xtext 2.23.0
 */
package org.example.melangeurmodel.melangeurmodel.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.example.melangeurmodel.melangeurmodel.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MelangeurmodelFactoryImpl extends EFactoryImpl implements MelangeurmodelFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MelangeurmodelFactory init()
  {
    try
    {
      MelangeurmodelFactory theMelangeurmodelFactory = (MelangeurmodelFactory)EPackage.Registry.INSTANCE.getEFactory(MelangeurmodelPackage.eNS_URI);
      if (theMelangeurmodelFactory != null)
      {
        return theMelangeurmodelFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MelangeurmodelFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MelangeurmodelFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MelangeurmodelPackage.MODEL: return createModel();
      case MelangeurmodelPackage.INSTRUCTION: return createInstruction();
      case MelangeurmodelPackage.MOVE: return createMove();
      case MelangeurmodelPackage.DATATYPE: return createDatatype();
      case MelangeurmodelPackage.VARIABLE: return createVariable();
      case MelangeurmodelPackage.CUP: return createCup();
      case MelangeurmodelPackage.CLEAN: return createClean();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Instruction createInstruction()
  {
    InstructionImpl instruction = new InstructionImpl();
    return instruction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Move createMove()
  {
    MoveImpl move = new MoveImpl();
    return move;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Datatype createDatatype()
  {
    DatatypeImpl datatype = new DatatypeImpl();
    return datatype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cup createCup()
  {
    CupImpl cup = new CupImpl();
    return cup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Clean createClean()
  {
    CleanImpl clean = new CleanImpl();
    return clean;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MelangeurmodelPackage getMelangeurmodelPackage()
  {
    return (MelangeurmodelPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MelangeurmodelPackage getPackage()
  {
    return MelangeurmodelPackage.eINSTANCE;
  }

} //MelangeurmodelFactoryImpl
